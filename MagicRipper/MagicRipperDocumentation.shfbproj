<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which
         assemblies to include from solution and project documentation
         sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{eec11b7a-5a28-4c30-9e8f-7bdbef37254d}</ProjectGuid>
    <SHFBSchemaVersion>1.9.3.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual
         Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="MagicRipper.csproj" xmlns="" />
    </DocumentationSources>
    <VisibleItems>InheritedMembers, InheritedFrameworkMembers, Protected</VisibleItems>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="MagicRipper" isDocumented="True">The &lt;see href="MagicRipper"/&gt; namespace provides classes that are used to perform an HTML scraping of the Gatherer Magic database.

&lt;remarks&gt;
&lt;para&gt;
The central class to refer to is &lt;see href="Ripper"/&gt; and its two methods &lt;see href="Ripper.GetExpansions"/&gt;
and &lt;see href="Ripper.GetCards"/&gt;.
&lt;/para&gt;
&lt;para&gt;
The most basic usage would be to get first the list of sets, and then for each of them iterate over the cards and download them:
&lt;/para&gt;
&lt;code&gt;
ripper = new Ripper();
foreach(var set in ripper.GetExpansions())
  foreach(var cardBlock in ripper.GetCards(set))
    foreach(var card in cardBlock)
      Console.WriteLine("Card downloaded: {0}", card.Name);
&lt;/code&gt;
&lt;para&gt;
This pattern is most likely impossible to apply in order to download the whole set of magic cards, since it takes too long a time,
and network disruptions or the necessity of turning down the system may waste hours of work. Because of this, the
&lt;c&gt;Ripper&lt;/c&gt; class supports cancellation events in order to decide which cards to download at different
granularities:
&lt;list type="bullet"&gt;
  &lt;item&gt;
  &lt;description&gt;Set (&lt;see href="Ripper.ExpansionsCardDownloading"/&gt;).&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
  &lt;description&gt;Variations of a single card (&lt;see href="Ripper.BaseCardDownloading"/&gt;).&lt;/description&gt;
  &lt;/item&gt;
  &lt;item&gt;
  &lt;description&gt;Card block (&lt;see href="Ripper.CardDownloading"/&gt;).&lt;/description&gt;
  &lt;/item&gt;
&lt;/list&gt;
&lt;/para&gt;
&lt;/remarks&gt;</NamespaceSummaryItem>
    </NamespaceSummaries>
    <BuildAssemblerVerbosity>AllMessages</BuildAssemblerVerbosity>
    <HelpFileFormat>HtmlHelp1</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <FrameworkVersion>.NET 4.0.30319</FrameworkVersion>
    <KeepLogFile>False</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CppCommentsFixup>True</CppCommentsFixup>
    <CleanIntermediates>False</CleanIntermediates>
    <SyntaxFilters>CSharp</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <PresentationStyle>vs2010</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>Guid</NamingMethod>
    <HelpTitle>MagicRipper Documentation</HelpTitle>
    <ContentPlacement>BelowNamespaces</ContentPlacement>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in
       order for Visual Studio to perform the build.  The others are optional
       common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>